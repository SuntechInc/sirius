# .github/workflows/deploy.yaml
name: Deploy Sirius

on:
  push:
    branches:
      - main
      - develop

env:
  IMAGE_NAME: lucassuntech/sirius

jobs:
  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.set-tag.outputs.TAG }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Determine Docker tag
        id: set-tag
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "TAG=latest" >> $GITHUB_ENV
          else
            echo "TAG=develop" >> $GITHUB_ENV
          fi
          echo "::set-output name=TAG::$TAG"

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME:${{ env.TAG }} .

      - name: Push Docker image
        run: docker push $IMAGE_NAME:${{ env.TAG }}

  deploy-to-k8s:
    name: Deploy to Kubernetes (Production)
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: SSH & kubectl rollout
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            export KUBECONFIG=/home/devops/.kube/config

            # Update the image on the Deployment to the new 'latest' tag
            kubectl set image deployment/frontend-prod \
              frontend=$IMAGE_NAME:latest \
              -n frontend-prod \
              --record

            # Ensure the pod always pulls the fresh image
            kubectl patch deployment frontend-prod \
              -n frontend-prod \
              --type='json' \
              -p='[{"op":"replace","path":"/spec/template/spec/containers/0/imagePullPolicy","value":"Always"}]'

            # Wait for zero-downtime rollout (maxSurge=1, maxUnavailable=0)
            kubectl rollout status deployment/frontend-prod \
              -n frontend-prod \
              --timeout=120s
