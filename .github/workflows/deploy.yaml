# .github/workflows/deploy.yaml
name: Deploy Sirius

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

env:
  IMAGE_NAME: lucassuntech/sirius

jobs:
  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.build.outputs.image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Determine Docker tag (short SHA)
        id: tag
        run: |
          echo "TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "::set-output name=TAG::${GITHUB_SHA::7}"

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" \
            | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        id: build
        run: |
          IMAGE="${IMAGE_NAME}:${{ steps.tag.outputs.TAG }}"
          docker build -t $IMAGE .
          echo "::set-output name=image::$IMAGE"

      - name: Push Docker image
        run: |
          docker push "${{ steps.build.outputs.image }}"

  deploy-to-k8s:
    name: Deploy to Kubernetes
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: SSH & kubectl deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ci-deploy
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            export KUBECONFIG=/home/ci-deploy/.kube/config

            # Recebe a imagem gerada no build
            IMAGE="${{ needs.build-and-push.outputs.image }}"

            echo "Deploying image: $IMAGE"

            # Atualiza o Deployment com a nova tag SHA
            kubectl set image deployment/frontend-prod \
              frontend="$IMAGE" \
              -n frontend-prod \
              --record

            # Garante PullPolicy=Always
            kubectl patch deployment frontend-prod \
              -n frontend-prod \
              --type=json \
              -p='[{"op":"replace","path":"/spec/template/spec/containers/0/imagePullPolicy","value":"Always"}]'

            # Aguarda rollout
            kubectl rollout status deployment/frontend-prod \
              -n frontend-prod \
              --timeout=120s
