# .github/workflows/deploy.yaml
name: Deploy Sirius

on:
  push:
    branches:
      - main
      - develop

env:
  IMAGE_NAME: lucassuntech/sirius

jobs:
  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.build.outputs.image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Determine Docker tag (short SHA)
        id: tag
        run: |
          # pega os primeiros 7 caracteres do SHA
          SHORT_SHA=${GITHUB_SHA::7}
          echo "TAG=$SHORT_SHA" >> $GITHUB_ENV
          echo "::set-output name=TAG::$SHORT_SHA"

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" \
              | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        id: build
        run: |
          docker build -t $IMAGE_NAME:${{ steps.tag.outputs.TAG }} .
          echo "::set-output name=image::$IMAGE_NAME:${{ steps.tag.outputs.TAG }}"

      - name: Push Docker image
        run: docker push $IMAGE_NAME:${{ steps.tag.outputs.TAG }}

  deploy-to-k8s:
    name: Deploy to Kubernetes
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: SSH & kubectl rollout
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ci-deploy
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            export KUBECONFIG=/home/ci-deploy/.kube/config

            IMAGE=${{ needs.build-and-push.outputs.image }}

            # Atualiza o Deployment com a nova tag de SHA
            kubectl set image deployment/frontend-prod \
              frontend=$IMAGE \
              -n frontend-prod \
              --record

            # Garante que sempre puxe do registry (PullPolicy=Always)
            kubectl patch deployment frontend-prod \
              -n frontend-prod \
              --type='json' \
              -p='[{"op":"replace","path":"/spec/template/spec/containers/0/imagePullPolicy","value":"Always"}]'

            # Espera o rollout terminar sem downtime
            kubectl rollout status deployment/frontend-prod \
              -n frontend-prod \
              --timeout=120s
