# .github/workflows/deploy.yaml
name: Deploy Sirius

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

env:
  IMAGE_NAME: lucassuntech/sirius
  K8S_NAMESPACE: frontend-prod
  K8S_DEPLOYMENT: frontend-prod

jobs:
  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Determine Docker tag (short SHA)
        id: tag
        run: echo "TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" \
          | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: |
          IMAGE="${IMAGE_NAME}:${TAG}"
          docker build -t $IMAGE .
          docker tag $IMAGE $IMAGE_NAME:latest

      - name: Push Docker images
        run: |
          # push SHA-tagged
          docker push "${IMAGE_NAME}:${TAG}"
          # push latest
          docker push "${IMAGE_NAME}:latest"

  deploy-to-k8s:
    name: Deploy to Kubernetes (Production)
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: SSH & rollout restart
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ci-deploy
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            export KUBECONFIG=/home/ci-deploy/.kube/config

            # Reinicia o Deployment para puxar imagem:latest
            kubectl rollout restart deployment/${K8S_DEPLOYMENT} -n ${K8S_NAMESPACE}

            # Aguarda o rollout completar
            kubectl rollout status deployment/${K8S_DEPLOYMENT} \
              -n ${K8S_NAMESPACE} \
              --timeout=120s
